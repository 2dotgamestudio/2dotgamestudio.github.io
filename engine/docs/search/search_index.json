{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to 2DOT Engine Docs Use the left bar to navigate.","title":"Home"},{"location":"#welcome-to-2dot-engine-docs","text":"Use the left bar to navigate.","title":"Welcome to 2DOT Engine Docs"},{"location":"core-classes/","text":"Core engine.core.Animation __init__(self, frames : list, speed : float, destroy_in_last_frame : bool [False], convert_alpha : bool [False]) Variables frames : list speed : float destroy_in_last_frame : bool convert_alpha : bool destroyed : bool Methods run() restore() engine.core.Camera __init__(self, width : int, height : int, screen_width : int, screen_height : int, lerp : float [1.0], limit_x : bool [True], limit_y : bool [True]) Variables type : str width : int height : int screen_width : int screen_height : int lerp : float limit_x : bool limit_y : bool Methods update(entity : engine.core.Entity | engine.core.Sprite) apply(entity : engine.core.Entity | engine.core.Sprite) applyRect(rect : pygame.Rect) engine.core.Component __init__(self, name : str) Variables type : str object : engine.core.Entity [None] name : str engine.core.Entity __init__(self, group : pygame.sprite.Group [None], name : str [\"Entity\"], posX : int [0], posY : int [0], scaleX : int [32], scaleY : int [32]) Variables type : str name : str visible : bool properties : list components : dict parents : dict position : pygame.math.Vector2 scale : pygame.math.Vector2 image : pygame.Surface rect: pygame.Rect Methods addComponent(component : engine.core.Component) getComponent(component : str) -> engine.core.Component hasComponent(component : engine.core.Component) -> bool updateComponents() move(vector2 : pygame.math.Vector2) updateParentPosition() parent(entity : engine.core.Entity, distanceX : int, distanceY : int) setPosition(vector2 : pygame.math.Vector2) setPositionX(value : int) setPositionY(value : int) setVisible(value : bool) getPosition() -> pygame.math.Vector2 getPositionX() -> int getPositionY() -> int getScale() -> pygame.math.Vector2 getScaleX() -> int getScale() -> int getDistanceTo(entity : engine.core.Entity) -> pygame.math.Vector2 getDirectionTo(entity : engine.core.Entity) -> pygame.math.Vector2 engine.core.GameMap __init__(self, tilemap : engine.core.Tilemap) Variables type : str tilemap : engine.core.Tilemap image : pygame.Surface [None] rect : pygame.Rect [None] Methods build(build_obstacles : bool [False], remove_background : bool [False]) render(surface : pygame.Surface, camera : engine.core.Camera [None]) engine.core.Particle __init__(self, posX : int [0], posY : int [0], color : tuple [(255,255,255)], random_color : list of tuple [None], min_speed_x : int [-5], max_speed_x : int [5], min_speed_y : int [-2], max_speed_y : int [2], min_radius : int [5], max_radius : int [7], gravity : float [0.0], spawn_delay : float [0.0], max_particles : int [0], start_on_play : bool [True]) Variables type : str particles : list x : int y : int color : tuple (255,255,255) ramdom_color : list [None] min_speed_x : int max_speed_x : int min_speed_y : int max_speed_y : int min_radius : int max_radius : int gravity : float spawn_delay : float max_particles : int start_on_play : bool destroyed : bool instancieds : int Methods update() render(surface : pygame.Surface, camera : engine.core.Camera [None]) new() end() engine.core.ParticleRenderer __init__(self) Variables particles : list Methods add(particle : engine.core.Particle) update() render(surface : pygame.Surface, camera : engine.core.Camera [None]) engine.core.Scene __init__(self, display : pygame.Surface, width : int, height : int, name : str [\"Scene\"], adjust_surface : bool [False]) Variables type : str name : str surface : pygame.Surface Methods add(entity : engine.core.Entity | engine.core.Sprite) remove(entity : engine.core.Entity | engine.core.Sprite) has(entity : engine.core.Entity | engine.core.Sprite) -> bool getObjects() -> list update() render(camera : engine.core.Camera [None] engine.core.Sprite __init__(self, group : pygame.sprite.Group [None], name : str [\"Entity\"], image_path : str [None], posX : int [0], posY : int [0], scaleX : int [32], scaleY : int [32]) Variables type : str name : str flipX : bool flipY : bool visible : bool position : pygame.math.Vector2 scale : pygame.math.Vector2 parents : dict image : pygame.Surface rect : pygame.Rect Methods setImage(image : pygame.Surface) setFlip(flipX : bool, flipY : bool) move(vector2 : pygame.math.Vector2) parent(entity : engine.core.Entity, distanceX : int, distanceY : int) setPosition(vector2 : pygame.math.Vector2) setPositionX(value : int) setPositionY(value : int) setVisible(value : bool) getPosition() -> pygame.math.Vector2 getPositionX() -> int getPositionY() -> int getScale() -> pygame.math.Vector2 getScaleX() -> int getScale() -> int updateParentPosition() engine.core.Text __init__(self, font_path : str, size : int, text : str, antialias : bool [False], bold : bool [False], italic : bool [False], color : tuple [(255,255,255)], position : pygame.math.Vector2 [pygame.math.Vector2(0,0)]) Variables type : str font_path : str size : int text : str antialias : bool bold : bool italic : bool color : tuple position : pygame.math.Vector2 Methods render(surface : pygame.Surface) engine.core.Tilemap __init__(self, file_path : str, obstacles_group : pygame.sprite.Group [None], ramps_group : pygame.sprite.Group [None]) Variables type : str width : int height : int tmxdata : pytmx.pytmx.TiledMap obstacles_group : pygame.sprite.Group ramps_group : pygame.sprite.Group Methods render(surface : pygame.Surface, camera : engine.core.Camera [None]) makeMap() -> pygame.Surface makeObstacles() engine.core.Timer init (self) Variables lastTime : float isPaused : bool goPause : bool timePaused : 0.0 Methods getTimer() -> float pauseTimer() resumeTimer() resetTimer()","title":"Core Classes"},{"location":"core-classes/#core","text":"","title":"Core"},{"location":"core-classes/#enginecoreanimation","text":"__init__(self, frames : list, speed : float, destroy_in_last_frame : bool [False], convert_alpha : bool [False])","title":"engine.core.Animation"},{"location":"core-classes/#variables","text":"frames : list speed : float destroy_in_last_frame : bool convert_alpha : bool destroyed : bool","title":"Variables"},{"location":"core-classes/#methods","text":"run() restore()","title":"Methods"},{"location":"core-classes/#enginecorecamera","text":"__init__(self, width : int, height : int, screen_width : int, screen_height : int, lerp : float [1.0], limit_x : bool [True], limit_y : bool [True])","title":"engine.core.Camera"},{"location":"core-classes/#variables_1","text":"type : str width : int height : int screen_width : int screen_height : int lerp : float limit_x : bool limit_y : bool","title":"Variables"},{"location":"core-classes/#methods_1","text":"update(entity : engine.core.Entity | engine.core.Sprite) apply(entity : engine.core.Entity | engine.core.Sprite) applyRect(rect : pygame.Rect)","title":"Methods"},{"location":"core-classes/#enginecorecomponent","text":"__init__(self, name : str)","title":"engine.core.Component"},{"location":"core-classes/#variables_2","text":"type : str object : engine.core.Entity [None] name : str","title":"Variables"},{"location":"core-classes/#enginecoreentity","text":"__init__(self, group : pygame.sprite.Group [None], name : str [\"Entity\"], posX : int [0], posY : int [0], scaleX : int [32], scaleY : int [32])","title":"engine.core.Entity"},{"location":"core-classes/#variables_3","text":"type : str name : str visible : bool properties : list components : dict parents : dict position : pygame.math.Vector2 scale : pygame.math.Vector2 image : pygame.Surface rect: pygame.Rect","title":"Variables"},{"location":"core-classes/#methods_2","text":"addComponent(component : engine.core.Component) getComponent(component : str) -> engine.core.Component hasComponent(component : engine.core.Component) -> bool updateComponents() move(vector2 : pygame.math.Vector2) updateParentPosition() parent(entity : engine.core.Entity, distanceX : int, distanceY : int) setPosition(vector2 : pygame.math.Vector2) setPositionX(value : int) setPositionY(value : int) setVisible(value : bool) getPosition() -> pygame.math.Vector2 getPositionX() -> int getPositionY() -> int getScale() -> pygame.math.Vector2 getScaleX() -> int getScale() -> int getDistanceTo(entity : engine.core.Entity) -> pygame.math.Vector2 getDirectionTo(entity : engine.core.Entity) -> pygame.math.Vector2","title":"Methods"},{"location":"core-classes/#enginecoregamemap","text":"__init__(self, tilemap : engine.core.Tilemap)","title":"engine.core.GameMap"},{"location":"core-classes/#variables_4","text":"type : str tilemap : engine.core.Tilemap image : pygame.Surface [None] rect : pygame.Rect [None]","title":"Variables"},{"location":"core-classes/#methods_3","text":"build(build_obstacles : bool [False], remove_background : bool [False]) render(surface : pygame.Surface, camera : engine.core.Camera [None])","title":"Methods"},{"location":"core-classes/#enginecoreparticle","text":"__init__(self, posX : int [0], posY : int [0], color : tuple [(255,255,255)], random_color : list of tuple [None], min_speed_x : int [-5], max_speed_x : int [5], min_speed_y : int [-2], max_speed_y : int [2], min_radius : int [5], max_radius : int [7], gravity : float [0.0], spawn_delay : float [0.0], max_particles : int [0], start_on_play : bool [True])","title":"engine.core.Particle"},{"location":"core-classes/#variables_5","text":"type : str particles : list x : int y : int color : tuple (255,255,255) ramdom_color : list [None] min_speed_x : int max_speed_x : int min_speed_y : int max_speed_y : int min_radius : int max_radius : int gravity : float spawn_delay : float max_particles : int start_on_play : bool destroyed : bool instancieds : int","title":"Variables"},{"location":"core-classes/#methods_4","text":"update() render(surface : pygame.Surface, camera : engine.core.Camera [None]) new() end()","title":"Methods"},{"location":"core-classes/#enginecoreparticlerenderer","text":"__init__(self)","title":"engine.core.ParticleRenderer"},{"location":"core-classes/#variables_6","text":"particles : list","title":"Variables"},{"location":"core-classes/#methods_5","text":"add(particle : engine.core.Particle) update() render(surface : pygame.Surface, camera : engine.core.Camera [None])","title":"Methods"},{"location":"core-classes/#enginecorescene","text":"__init__(self, display : pygame.Surface, width : int, height : int, name : str [\"Scene\"], adjust_surface : bool [False])","title":"engine.core.Scene"},{"location":"core-classes/#variables_7","text":"type : str name : str surface : pygame.Surface","title":"Variables"},{"location":"core-classes/#methods_6","text":"add(entity : engine.core.Entity | engine.core.Sprite) remove(entity : engine.core.Entity | engine.core.Sprite) has(entity : engine.core.Entity | engine.core.Sprite) -> bool getObjects() -> list update() render(camera : engine.core.Camera [None]","title":"Methods"},{"location":"core-classes/#enginecoresprite","text":"__init__(self, group : pygame.sprite.Group [None], name : str [\"Entity\"], image_path : str [None], posX : int [0], posY : int [0], scaleX : int [32], scaleY : int [32])","title":"engine.core.Sprite"},{"location":"core-classes/#variables_8","text":"type : str name : str flipX : bool flipY : bool visible : bool position : pygame.math.Vector2 scale : pygame.math.Vector2 parents : dict image : pygame.Surface rect : pygame.Rect","title":"Variables"},{"location":"core-classes/#methods_7","text":"setImage(image : pygame.Surface) setFlip(flipX : bool, flipY : bool) move(vector2 : pygame.math.Vector2) parent(entity : engine.core.Entity, distanceX : int, distanceY : int) setPosition(vector2 : pygame.math.Vector2) setPositionX(value : int) setPositionY(value : int) setVisible(value : bool) getPosition() -> pygame.math.Vector2 getPositionX() -> int getPositionY() -> int getScale() -> pygame.math.Vector2 getScaleX() -> int getScale() -> int updateParentPosition()","title":"Methods"},{"location":"core-classes/#enginecoretext","text":"__init__(self, font_path : str, size : int, text : str, antialias : bool [False], bold : bool [False], italic : bool [False], color : tuple [(255,255,255)], position : pygame.math.Vector2 [pygame.math.Vector2(0,0)])","title":"engine.core.Text"},{"location":"core-classes/#variables_9","text":"type : str font_path : str size : int text : str antialias : bool bold : bool italic : bool color : tuple position : pygame.math.Vector2","title":"Variables"},{"location":"core-classes/#methods_8","text":"render(surface : pygame.Surface)","title":"Methods"},{"location":"core-classes/#enginecoretilemap","text":"__init__(self, file_path : str, obstacles_group : pygame.sprite.Group [None], ramps_group : pygame.sprite.Group [None])","title":"engine.core.Tilemap"},{"location":"core-classes/#variables_10","text":"type : str width : int height : int tmxdata : pytmx.pytmx.TiledMap obstacles_group : pygame.sprite.Group ramps_group : pygame.sprite.Group","title":"Variables"},{"location":"core-classes/#methods_9","text":"render(surface : pygame.Surface, camera : engine.core.Camera [None]) makeMap() -> pygame.Surface makeObstacles()","title":"Methods"},{"location":"core-classes/#enginecoretimer","text":"init (self)","title":"engine.core.Timer"},{"location":"core-classes/#variables_11","text":"lastTime : float isPaused : bool goPause : bool timePaused : 0.0","title":"Variables"},{"location":"core-classes/#methods_10","text":"getTimer() -> float pauseTimer() resumeTimer() resetTimer()","title":"Methods"},{"location":"engine-general/","text":"Engine General Functions engine.getMousePosition() -> pygame.math.Vector2 engine.mouseClick(value : int) -> bool","title":"Engine General"},{"location":"engine-general/#engine-general","text":"","title":"Engine General"},{"location":"engine-general/#functions","text":"engine.getMousePosition() -> pygame.math.Vector2 engine.mouseClick(value : int) -> bool","title":"Functions"},{"location":"release-notes/","text":"Notes 2DOT Engine 2DOT Engine is being developed to help game developers that use pygame, so that they can make their projects easier, 2DOT Engine is an open source framework, in this API you will find all the features of this framework. The first version 1.0 is now available for download, this version is not yet stable but it can already be used to do some tests. 2DOT Engine 1.0 - 00/11/2019","title":"Release Notes"},{"location":"release-notes/#notes","text":"","title":"Notes"},{"location":"release-notes/#2dot-engine","text":"2DOT Engine is being developed to help game developers that use pygame, so that they can make their projects easier, 2DOT Engine is an open source framework, in this API you will find all the features of this framework. The first version 1.0 is now available for download, this version is not yet stable but it can already be used to do some tests.","title":"2DOT Engine"},{"location":"release-notes/#2dot-engine-10-00112019","text":"","title":"2DOT Engine 1.0 - 00/11/2019"}]}